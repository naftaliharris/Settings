#!/usr/bin/env python

import sys
from datetime import datetime
import time
from subprocess import check_output
import socket
from traceback import format_exc
import signal
from send_email import send_email

HOSTNAME = socket.gethostname()


def ignore(signal, frame):
    pass


def main():
    signal.signal(signal.NOHUP, signal_handler)


def usage():
    print "Usage: %s seconds command [arg1] [arg2] [...]" % sys.argv[0]
    print "Runs the command once every given number of seconds, and emails if the result is unchanged."
    print "Ignores NOHUP signals, (i.e. will keep running when you log out)."


def main():
    if len(sys.argv) < 3:
        usage()
        sys.exit(-1)

    seconds = int(sys.argv[1])
    command = " ".join(sys.argv[2:])
    try:
        prev = check_output(command, shell=True)
        curr = None
        while True:
            time.sleep(seconds)
            curr = check_output(command, shell=True)
            if curr == prev:
                subject = "'$ %s' stopped changing at %s UTC" % (command, datetime.utcnow())
                message = "...on %s.\n\n'$ %s' did not change for %d seconds.\n\nFinished with (last 5000 characters):\n\n%s" % (HOSTNAME, command, seconds, curr[:5000])
                break
            else:
                prev = curr
    except KeyboardInterrupt:
        print "\nKeyboardInterrupt; shutting down gracefully (and not sending any emails)."
        sys.exit(-1)
    except:
        subject = "'$ %s' failed at %s UTC" % (command, datetime.utcnow())
        message = "...on %s.\n\n" % HOSTNAME
        message += format_exc()

    send_email(subject=subject, message=message)


if __name__ == "__main__":
    main()
