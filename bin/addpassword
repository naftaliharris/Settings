#!/bin/bash

updatepassword

GPG_OLD=$HOME/keys/passwords/$(ls $HOME/keys/passwords | sort | tail -n1)
PWFILE=${GPG_OLD%.*}

GPG_NEW=$HOME/keys/passwords/passwords-$(date -u +%Y-%m-%d_%H.%M.%S).tsv.gpg

if [[ "$GPG_OLD" > "$GPG_NEW" ]]
then
    echo "Some kind of time corruption."
    exit -1
fi

control_c()
{
  echo "*** Shredding Password File ***"
  shred -u $PWFILE
  exit -1
}
 
# trap keyboard interrupt (control-c)
trap control_c SIGINT

echo -n "Enter Password: "
read -s PASSWORD
echo ""
echo $PASSWORD | gpg --passphrase-fd 0 --batch ${PWFILE}.gpg
if [[ $? -ne 0 ]]
then
    exit -1
fi

echo -n "Name the new service: "
read service
new_pass=$(pwgen)

echo -e "${service}\t${new_pass}" >> $PWFILE

success=1
while [[ $success -ne 0 ]]
do
    echo $PASSWORD | gpg -o ${GPG_NEW} -c --passphrase-fd 0 --batch ${PWFILE}
    success=$?
done

shred -u $PWFILE

scp ${GPG_NEW} password_server:~/passwords/

echo -n $new_pass | clip

exit 0
